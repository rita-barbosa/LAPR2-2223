@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

participant ":ImportLegacyInformationController" as CTRL
participant ":RequestMapper" as MAPPER
participant "RequestDto\n:RequestDto" as DTO
participant "request\n:Request" as REQUEST
participant "propertyType\n:PropertyType" as PROPTYPE
participant "business\n:Business" as BUSINESS
participant "lease\n:Lease" as LEASE
participant "property\n:Property" as PROPERTY
participant "residence\n:Residence" as RESIDENCE
participant "house\n:House" as HOUSE
participant "location\n:Location" as LOCATION
participant "availableEquipment\n:AvailableEquipment" as AEQUIP


autonumber 15.1

    -> CTRL: createRequest(legacySystemDto, agent, ownerEmail)

     activate CTRL

autonumber 15.1.1

    group Create Request

    CTRL -> MAPPER : property = createProperty(legacyInformationDto)
    activate MAPPER

    MAPPER -> DTO : businessTypeDesignation = getBusinessTypeDesignation()
    activate DTO
    deactivate DTO

    alt Business Type Designation = Lease
        MAPPER -> DTO : contractDuration = getContractDuration()
        activate DTO
        deactivate DTO

    MAPPER -> REQUEST : business = createLease(businessTypeDesignation, amount, contractDuration)
    activate REQUEST

        REQUEST -> LEASE** : create(businessTypeDesignation, amount, contractDuration)
    deactivate REQUEST

    else Business Type Designation = Sale

    MAPPER -> REQUEST : business = createSale(businessTypeDesignation, amount)
    activate REQUEST

        REQUEST -> BUSINESS** : create(businessTypeDesignation, amount)
    deactivate REQUEST

    end alt

    MAPPER -> DTO : amount = getAmount()
    activate DTO
    deactivate DTO

    MAPPER -> DTO : propertyTypeDesignation = getPropertyTypeDesignation()
    activate DTO
    deactivate DTO

     MAPPER -> REQUEST : propertyType = createPropertyType(propertyTypeDesignation)
     activate REQUEST

         REQUEST -> PROPTYPE** : create(propertyTypeDesignation)
     deactivate REQUEST

    MAPPER -> DTO : area = getArea()
    activate DTO
    deactivate DTO

    MAPPER -> DTO : location = getLocation()
    activate DTO
    deactivate DTO

    MAPPER -> DTO : distanceCityCenter = getDistanceCityCenter()
    activate DTO
    deactivate DTO

    alt Property Type = Land

        MAPPER -> REQUEST : createLandFromLegacy(area, location, distanceCityCenter)
        activate REQUEST

        REQUEST -> PROPERTY** : create(area, location, distanceCityCenter)

        activate PROPERTY

            PROPERTY -> LOCATION** : createLocationFromString(location)
            activate LOCATION

            LOCATION -> LOCATION : validateLocation(location)
                activate LOCATION

                LOCATION --> LOCATION
            deactivate LOCATION

                LOCATION --> PROPERTY : location
            deactivate LOCATION

        deactivate PROPERTY

        REQUEST --> MAPPER : request
        deactivate REQUEST

    end alt

    MAPPER -> DTO : numberBedrooms = getNumberBedrooms()
    activate DTO
    deactivate DTO

    MAPPER -> DTO : numberBathrooms = getNumberBathrooms()
    activate DTO
    deactivate DTO

    MAPPER -> DTO : parkingSpace = getParkingSpace()
    activate DTO
    deactivate DTO

    MAPPER -> DTO : centralHeating = getCentralHeating()
    activate DTO
    deactivate DTO

    MAPPER -> DTO : airConditioned = getAirconditioned()
    activate DTO
    deactivate DTO


    alt Property Type Designation = Apartment

        MAPPER -> REQUEST : createResidenceFromLegacy(area, location, distanceCityCenter,\n numberBedrooms, numberBathrooms, parkingSpace,\n centralHeating, airConditioned)
        activate REQUEST

        REQUEST -> RESIDENCE** : create(area, location, distanceCityCenter,\n numberBedrooms, numberBathrooms,\n parkingSpace, centralHeating, airConditioned)
        activate RESIDENCE

        RESIDENCE -> AEQUIP** : create(centralHeating, airConditioned)

        RESIDENCE -> LOCATION** : createLocationFromString(location)
        activate LOCATION

        LOCATION -> LOCATION : validateLocation(location)
        activate LOCATION

            LOCATION --> LOCATION
        deactivate LOCATION

            LOCATION --> RESIDENCE : location
        deactivate LOCATION

        deactivate RESIDENCE

        REQUEST --> MAPPER : request
        deactivate REQUEST

    end alt

    MAPPER -> DTO : basement = getBasement()
    activate DTO
    deactivate DTO

    MAPPER -> DTO : inhabitableLoft = getInhabitableLoft()
    activate DTO
    deactivate DTO

    MAPPER -> DTO : sunExposure = getSunExposure()
    activate DTO
    deactivate DTO


    alt Property Type Designation = House

        MAPPER -> REQUEST : createHouseFromLegacy(area, location, distanceCityCenter,\n numberBedrooms, numberBathrooms, parkingSpace,\n centralHeating, airConditioned, basement, inhabitableLoft,\n sunExposure)
        activate REQUEST

        REQUEST -> HOUSE** : create(area, location, distanceCityCenter,\n numberBedrooms, numberBathrooms,\n parkingSpace, centralHeating, airConditioned,\n basement, inhabitableLoft, sunExposure)
        activate HOUSE

        HOUSE -> AEQUIP** : create(centralHeating, airConditioned)

        HOUSE -> LOCATION** : createLocationFromString(location)
        activate LOCATION

        LOCATION -> LOCATION : validateLocation(location)
        activate LOCATION

            LOCATION --> LOCATION
        deactivate LOCATION

            LOCATION --> HOUSE : location
        deactivate LOCATION

        deactivate HOUSE

            REQUEST --> MAPPER : request
        deactivate REQUEST

    end alt

        MAPPER --> CTRL : request
    deactivate MAPPER

    end group

autonumber 15.2

    <-- CTRL: request
    deactivate CTRL


@enduml
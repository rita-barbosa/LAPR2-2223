@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false


participant ":ScheduleVisitController" as CTRL
participant "announcement\n:Announcement" as ANNOUNCE
participant "request\n:Request" as REQUEST
participant "property\n:Property" as PROPERTY
participant "visit\n:Visit" as VST
participant "employee\n:Employee" as EMP
participant "person:\nPerson" as PERSON
participant ":Notification" as NTF

autonumber 14

 -> CTRL : sendNotificationMessage(visit)

activate CTRL

    autonumber 14.1

    group Send Notification Message

        CTRL -> ANNOUNCE : announcementId = getId()
        activate ANNOUNCE

            ANNOUNCE ->  CTRL : announcementId
        deactivate ANNOUNCE

        CTRL -> ANNOUNCE : location = getLocation()
        activate ANNOUNCE

            ANNOUNCE ->  REQUEST : getLocation()
            activate REQUEST

                REQUEST -> PROPERTY : getLocation()
                activate PROPERTY

                    PROPERTY --> REQUEST : location
                deactivate PROPERTY

                REQUEST --> ANNOUNCE : location
            deactivate REQUEST

             ANNOUNCE --> CTRL : location
        deactivate ANNOUNCE

        CTRL -> ANNOUNCE : visitDate = getVisitDate()
        activate ANNOUNCE

            ANNOUNCE ->  VST : getVisitDate()
            activate VST

                VST --> ANNOUNCE : visitDate
            deactivate VST
             ANNOUNCE --> CTRL : visitDate
        deactivate ANNOUNCE

        CTRL -> ANNOUNCE : startHour = getVisitStartHour()
        activate ANNOUNCE

            ANNOUNCE ->  VST : getStartHour()
            activate VST

                VST --> ANNOUNCE : startHour
            deactivate VST
             ANNOUNCE --> CTRL : startHour
        deactivate ANNOUNCE

        CTRL -> ANNOUNCE : endHour = getVisitEndHour()
        activate ANNOUNCE

            ANNOUNCE ->  VST : getEndHour()
            activate VST

                VST --> ANNOUNCE : endHour
            deactivate VST
             ANNOUNCE --> CTRL : endHour
        deactivate ANNOUNCE

        |||
        CTRL -> ANNOUNCE: agentEmail = getAgentEmail()
        activate ANNOUNCE

        ANNOUNCE -> EMP : getEmail()
        activate EMP

        EMP -> PERSON : getEmailAddress()
        activate PERSON

           PERSON --> EMP : agentEmail
        deactivate PERSON

           EMP --> ANNOUNCE : agentEmail
        deactivate EMP

           ANNOUNCE --> CTRL : agentEmail
        deactivate ANNOUNCE

   |||
       CTRL -> CTRL : getUserPerson()
       activate CTRL
           ref over CTRL
               Get User Person
           end ref
           CTRL --> CTRL : person
       deactivate CTRL
|||
        CTRL -> PERSON : getName()
        activate PERSON

            PERSON --> CTRL : name
        deactivate PERSON


        CTRL -> PERSON : getPhoneNumber()
        activate PERSON

            PERSON --> CTRL : phoneNumber
        deactivate PERSON

    |||
        CTRL -> ANNOUNCE : sendNotification(agentEmail, announcementId, location,\n name, phoneNumber, visitDate, startHour, endHour)
        activate ANNOUNCE

        ANNOUNCE -> VST : sendNotification(agentEmail, announcementId, location,\n name, phoneNumber, visitDate, startHour, endHour)

        loop for all visits

            activate VST

                VST -> NTF** : create(agentEmail, announcementId, location,\n name, phoneNumber, visitDate, startHour, endHour)
            deactivate VST

        end loop

        ANNOUNCE --> CTRL : confirmation
        deactivate ANNOUNCE
    end group

    autonumber 15

    <-- CTRL  : confirmation
deactivate CTRL

@enduml
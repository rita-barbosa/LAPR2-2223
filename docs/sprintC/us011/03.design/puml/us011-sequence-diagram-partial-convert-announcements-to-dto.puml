@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber
participant "announcementMapper\n: AnnouncementMapper" as AnnMAPPER
 participant "announcement\n: Announcement" as Announce
  participant "orderList\n: OrderList" as OrderList
 participant "announcementDto\n: AnnouncementDto" as AnnDTO
  participant "requestMapper\n: RequestMapper" as RequestMapper
 participant "requestDto\n: RequestDto" as RequestDTO
participant "orderMapper\n: OrderMapper" as OrderMapper
 participant "orderDto\n: OrderDto" as OrderDTO
   participant "employeeMapper\n: EmployeeMapper" as EmployeeMapper
  participant "employeeDto\n: EmployeeDto" as EmployeeDTO
   participant "commissionMapper\n: CommissionMapper" as CommissionMapper
 participant "commissionDto\n: CommissionDto" as CommissionDTO


-> AnnMAPPER : toDTO(announcementListAllAgencies)
     activate AnnMAPPER

         note right AnnMAPPER
         **DÚVIDAS | FALTA FAZER:**
         * Será necessário colocar os mappers do requestDto; orderList....
         end note

         loop for each announcement

         AnnMAPPER -> AnnMAPPER : toDTO(announcement)
         activate AnnMAPPER

         AnnMAPPER -> Announce: getRequest()
         activate Announce
         Announce --> AnnMAPPER : request
         deactivate Announce

         AnnMAPPER -> Announce:  getListOrders()
         activate Announce
         Announce -> OrderList : getListOrders
         activate OrderList
         OrderList --> Announce : listOrders
         deactivate OrderList
         Announce --> AnnMAPPER : listOrders
         deactivate Announce

         AnnMAPPER -> Announce:  getCommission()
         activate Announce
         Announce --> AnnMAPPER : commission
         deactivate Announce

         AnnMAPPER -> Announce: getEmployee()
         activate Announce
         Announce --> AnnMAPPER : employee
         deactivate Announce

         AnnMAPPER -> Announce: getAcceptanceDate()
         activate Announce
         Announce --> AnnMAPPER : acceptanceDate
         deactivate Announce

         AnnMAPPER -> AnnDTO**: create(request,listOrders,commission,employee,acceptanceDate)
         deactivate AnnMAPPER
         activate AnnDTO

         AnnDTO -> RequestMapper : toDTO(request)
         activate RequestMapper
         RequestMapper -> RequestDTO** : create()
         RequestMapper --> AnnDTO : requestDto
         deactivate RequestMapper


         AnnDTO -> OrderMapper : toDTO(listOrders)
         activate OrderMapper

             loop for each order
             OrderMapper -> OrderDTO** : create(order)
             OrderMapper -> OrderMapper : add(orderDto)
             activate OrderMapper
             OrderMapper --> OrderMapper
             deactivate OrderMapper
             |||
             end loop

         OrderMapper --> AnnDTO: listOrderDto
         deactivate OrderMapper

         AnnDTO -> EmployeeMapper : toDTO(employee)
         activate EmployeeMapper
         EmployeeMapper -> EmployeeDTO** : create()
         EmployeeMapper --> AnnDTO : employeeDto
         deactivate EmployeeMapper

         AnnDTO -> CommissionMapper : toDTO(commission)
         activate CommissionMapper
         CommissionMapper -> CommissionDTO** : create()
         CommissionMapper --> AnnDTO : commissionDto
         deactivate CommissionMapper

         deactivate AnnDTO

         AnnMAPPER -> AnnMAPPER: add(announcementDto)
         activate AnnMAPPER

         AnnMAPPER --> AnnMAPPER:
         deactivate AnnMAPPER

         |||
         end loop

     <-- AnnMAPPER : announcementDtoList
     deactivate AnnMAPPER

@enduml
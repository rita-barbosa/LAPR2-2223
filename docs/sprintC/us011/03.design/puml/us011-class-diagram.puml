@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class Order {
- Double orderAmount
- LocalDate orderDate
- String clientEmail
+ Order(orderAmount,orderDate,clientEmail)
+ setAcceptanceAnswer(acceptanceAnswer)
+ rejectOrder()

}

class OrderMapper {
+ toDto(listOrders)
+ toModel(orderDto)
- add(orderDto)
}
class OrderList {
+ defineOrderAcceptance(acceptanceAnswer, order)
+ sortOrdersByPrice()
}

class OrderDto {
- String orderDate
- int orderAmount
- String clientEmail
- String acceptanceAnswer
+ getClientEmail()
+ getOrderAmount()
+ getOrderDate()
+ OrderDto(order)
}

class Announcement {
+ getCommission()
+ getEmployee()
+ getListOrders()
+ getRequest()
}

class AnnouncementDto {
- int getAnnouncementId
- RequestDto request
- CommissionDto commission
- String acceptanceDate
- EmployeeDto agent
+ getAnnouncementId()
+ AnnouncementDto(request, listOrders, commission, employee, acceptanceDate)
}

class AnnouncementList {
- List<Announcement> announcements
+ getList()
+ sortAnnouncementsByOldest(announcements)
}
class AnnouncementMapper {

}
class RequestDto {

}
class EmployeeDto{

}
class CommissionDto{

}
class Agency {
    + Agency()
}

class AgencyRepository {
    + getAgenciesList(description)
    + getAnnouncementListFromAllAgencies()
}


class Repositories {
    - Repositories()
    + getInstance() : repositories
    + getAgencyRepository()
}

class AcceptOrdersController {
    + AcceptOrdersController(agencyRepository)

}


class AcceptOrdersUI {
}



@enduml
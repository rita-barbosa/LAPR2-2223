@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class ApplicationSession
{
    + static getInstance()
    + getCurrentSession()
}

class UserSession
{
    + getUserEmail()
}

class Employee {
    - name
    - email
    - position
    - phone
}

class Agency {
    - String reference
    - String description
    - String informalDescription
    - String technicalDescription
    - Integer duration
    - Double cost

    + Agency(reference, description,\ninformalDescription, technicalDescription,\nduration, cost, createdBy, agency)
}

class Agency {
    - String description

    + Agency(description)
}

class Role {
    - String name
    - String vatNumber
    - String website
    - String phone
    - String email

    - addTask(task)
    - validateTask(task)
    + anyEmployeeHasEmail(email)
    + Role(name, vatNumber, webSite, phone, email, postalAddress, manager)
    + createTask(reference, description, informalDesccription,\ntechnicalDescription, duration, cost, taskCategoryDescription)
    - getEmployeeByEmail(email)

'  +saveTask(task)
}

class AgencyRepository {
    + getTaskCategoryByDescription(description)
}


class Repositories {
    - Repositories()
    + getInstance() : Repositories
    + getAgencyRepository()
    + getRoleRepository()
}

class RegisterEmployeeController {
    + RegisterEmployeeController(roleRepository, agencyRepository)
    + getTaskCategories()
    + createTask(userEmail, reference, description,\ninformalDescription, technicalDescription,\nduration, cost, categoryDescription)
    - getTaskCategoryByDescription(taskCategoryDescription)
    - getEmployeeFromSession()
}

note right of RegisterEmployeeController
    - userEmail is obtained
    from the user session
    - categoryDescription
    is retrieved from selected data
end note

note bottom of AgencyRepository
    - used for displaying
    the agency list
end note

class RegisterEmployeeUI {
}

Repositories -> Repositories : instance
ApplicationSession -> ApplicationSession : instance

RegisterEmployeeUI .> RegisterEmployeeController

RegisterEmployeeController .> Repositories : repositories

Repositories -> "1" AgencyRepository

RegisterEmployeeController ..> Agency
RegisterEmployeeController ..> RoleRepository : roleRepository
RegisterEmployeeController ..> AgencyRepository : agencyRepository

Repositories --> "1" RoleRepository

RoleRepository --> "*" Role

RegisterEmployeeController ..> "1" Role : role
Agency "*" --> "1" Agency : agency
AgencyRepository "1" --> "*" Agency : agency
Role "1" --> "*" Agency : tasks
Agency --> Employee : createdBy

Role --> "*" Employee : employs

@enduml
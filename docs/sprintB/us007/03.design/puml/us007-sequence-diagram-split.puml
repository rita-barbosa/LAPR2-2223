@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Unregistered User" as ADM
participant ":RegisterUserUI" as UI
participant ":RegisterUserController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "roleRepository\n:roleRepository" as RoleRepository
participant "personRepository\n:PersonRepository" as PERSONREP
participant "person\n:Person" as PERSON
participant "location\n:Location" as LOCATION
participant "authenticationRepository\n:authenticationRepository" as AUTHREP
participant "authFacade\n:AuthFacade"  as AUTHFACADE



activate ADM

    ADM -> UI : asks to register in the system to buy,sell and rent properties
    activate UI

    UI -> CTRL**: create

    UI --> ADM : requests data (name, passportCardNumber, tax number,\n emailAddress, phoneNumber, password)
    deactivate UI

    ADM -> UI : types requested data (name, passportCardNumber,taxNumber,\n emailAddress, phoneNumber, password)
    activate UI

    UI --> ADM : requests data (streetName, city, district, state, zipcode)
    deactivate UI

    opt
    ADM -> UI : types requested data (streetName, city, district, state, zipcode)
    activate UI
    end opt

    UI --> ADM : shows all data and asks for confirmation.
    deactivate UI

    ADM -> UI : submits data
    activate UI

    UI -> CTRL : registerUser(name, passportCardNumber, tax number,\n emailAddress, phoneNumber, password, streetName,\n city, district, state, zipcode)
    activate CTRL

    CTRL -> PLAT : getPersonRepository()
    activate PLAT

    PLAT --> CTRL : personRepository
    deactivate PLAT

    CTRL -> PERSONREP : createPerson(name, passportCardNumber, tax number,\n emailAddress, phoneNumber, streetName,\n city, district, state, zipcode,clientRole)
   activate PERSONREP

    PERSONREP -> PERSON** : create(name, passportCardNumber, tax number,\n emailAddress, phoneNumber, streetName,\n city, district, state, zipcode,clietnRole)
    activate PERSON

    PERSON -> LOCATION** : createLocation(streetName, city, \ndistrict, state, zipcode)
    deactivate PERSON

    PERSONREP -> PERSONREP: addPerson(person)
    activate PERSONREP

        PERSONREP -> PERSONREP: validatePerson(person)
        activate PERSONREP

        PERSONREP --> PERSONREP :
        deactivate PERSONREP

    PERSONREP --> PERSONREP :
    deactivate PERSONREP

    PERSONREP --> CTRL : person
    deactivate PERSONREP

    CTRL -> PLAT : getAuthenticationRepository()
    activate PLAT

    PLAT --> CTRL: authenticationRepository
    deactivate PLAT

    CTRL -> AUTHREP : addUserWithRoles(name,emailAddress,password,clientRole)
    activate AUTHREP

    AUTHREP -> AUTHFACADE: addUserWithRoles(name,emailAddress,password,clientRole)
    activate AUTHFACADE

    AUTHFACADE --> AUTHREP: success
    deactivate AUTHFACADE

    AUTHREP --> CTRL : success

    CTRL --> UI :success
    deactivate CTRL

    UI --> ADM : displays operation success
    deactivate UI



deactivate ADM

@enduml
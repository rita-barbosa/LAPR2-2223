@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Unregistered User" as User
participant ":DisplayPropertiesUI" as UI
participant ":DisplayPropertiesController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "filtersRepository\n:FiltersRepository" as FILTERSREP
participant "agencyRepository\n: AgencyRepository" as AGENCYREP
participant "agency\n: Agency" as AGENCY


activate User

    User -> UI : asks to display listed properties
    activate UI

    UI -> CTRL** : create

    UI -> CTRL : getAnnouncements()
    activate CTRL

         CTRL -> RepositorySingleton : getInstance()
         activate RepositorySingleton

         RepositorySingleton --> CTRL: repositories
         deactivate RepositorySingleton

         CTRL -> PLAT : getAgencyRepository()
         activate PLAT

         PLAT --> CTRL : agencyRepository
         deactivate PLAT

         loop for each agency

         CTRL -> AGENCYREP : getAgency()
         activate AGENCYREP

         AGENCYREP --> CTRL : agency
         deactivate AGENCYREP

         CTRL -> AGENCY : getAnnouncementList()
         activate AGENCY

         AGENCY --> CTRL : announcementList
         deactivate AGENCY

         end
        'CTRL -> CTRL : keepAnnouncements

'        CTRL -> ANNOUNCREP : getAcceptancesDates(announcementList))
'        activate ANNOUNCREP
'
'        ANNOUNCREP --> CTRL : acceptancesDatesList
'        deactivate ANNOUNCREP

         CTRL -> CTRL : sortByMostRecentAdded(announcementList)
         activate CTRL
         deactivate CTRL

         CTRL -> CTRL : announcementList
         activate CTRL
         deactivate CTRL

         CTRL --> UI : announcementList
         deactivate CTRL

         UI -> CTRL : getFiltersList()
         activate CTRL

             'CTRL -> FILTERS : getFilters()
             'activate FILTERS

             CTRL -> RepositorySingleton : getInstance()
             activate RepositorySingleton

             RepositorySingleton --> CTRL: repositories
             deactivate RepositorySingleton

             CTRL -> PLAT : getFiltersRepository()
             activate PLAT

             PLAT --> CTRL: filtersRepository
             deactivate PLAT

             CTRL -> FILTERSREP : getFiltersList()
             activate FILTERSREP

             FILTERSREP --> CTRL : filtersList
             deactivate FILTERSREP

         CTRL --> UI : filtersList
         deactivate CTRL

    UI --> User : display listed properties by most recent added \nand asks to select data (type of business)
    deactivate UI

    opt type of business
        User -> UI : selects data (type of business)
        activate UI

        UI -> CTRL :  getAnnouncements(announcements, businessyType)
        activate CTRL

        CTRL -> AGENCYREP : getAnnouncements(announcements, businessyType)
        activate AGENCYREP

        AGENCYREP -> AGENCY : getAnnouncementsByBusinessType(announcementList,\n businessyType)
        activate AGENCY

        loop for each announcement

            AGENCY -> AGENCY : announcementHasBusinessType(announcementList,\n businessyType)
            activate AGENCY

            AGENCY --> AGENCY: true/false
            deactivate AGENCY

            alt false
            AGENCY -> AGENCY : removeAnnouncement(announcementList)
            activate AGENCY

            AGENCY --> AGENCY: announcementList
            deactivate AGENCY
            |||
           end
        |||
        end

        AGENCY --> AGENCYREP : announcementList
        deactivate AGENCY

        AGENCYREP --> CTRL : announcementList
        deactivate AGENCYREP

        CTRL --> UI : announcementList
        deactivate CTRL
        |||
    end

    UI --> User : asks to select data (type of property)
    deactivate UI

    opt type of property
        User -> UI : selects data (type of property)
        activate UI

    UI -> CTRL :  getAnnouncements(announcements, propertyType)
    activate CTRL

    CTRL -> AGENCYREP : getAnnouncements(announcements, propertyType)
    activate AGENCYREP

    AGENCYREP -> AGENCY : getAnnouncementsByPropertyType(announcementList,\n propertyType)
    activate AGENCY

    loop for each announcement
        AGENCY -> AGENCY : announcementHasPropertyType(announcementList,\n propertyType)
        activate AGENCY

        AGENCY --> AGENCY: true/false
        deactivate AGENCY

        alt false
            AGENCY -> AGENCY : removeAnnouncement(announcementList)
            activate AGENCY

            AGENCY --> AGENCY: announcementList
            deactivate AGENCY
        |||
        end
        |||
    end

        AGENCY --> AGENCYREP : announcementList
        deactivate AGENCY

        AGENCYREP --> CTRL : announcementList
        deactivate AGENCYREP

        CTRL --> UI : announcementList
        deactivate CTRL
        |||
    end

    UI -> User : asks to select data (number of bedrooms)
    deactivate UI

    opt number of bedrooms
        User -> UI : selects data (number of bedrooms)
        activate UI

        UI -> CTRL :  getAnnouncements(announcements, numberBedrooms)
        activate CTRL

        CTRL -> AGENCYREP : getAnnouncements(announcements, numberBedrooms)
        activate AGENCYREP

        AGENCYREP -> AGENCY : getAnnouncementsByNumberBedrooms(announcementList,\n numberBedrooms)
        activate AGENCY

        loop for each announcement
            AGENCY -> AGENCY : announcementHasNumberBedrooms(announcementList,\n numberBedrooms)
            activate AGENCY

            AGENCY --> AGENCY: true/false
            deactivate AGENCY

            alt false
            AGENCY -> AGENCY : removeAnnouncement(announcementList)
            activate AGENCY

            AGENCY --> AGENCY: announcementList
            deactivate AGENCY
        |||
        end
    |||
    end

    AGENCY --> AGENCYREP : announcementList
    deactivate AGENCY

    AGENCYREP --> CTRL : announcementList
    deactivate AGENCYREP

    CTRL --> UI : announcementList
    deactivate CTRL

    |||
    end

    UI -> UI : sortingList
    activate UI

    UI --> UI
    deactivate UI

    UI --> User : display all the listed properties, according to the \ncriteria chosen and asks to select data (price)
    deactivate UI

    opt price
        User -> UI : selects data (price)
        activate UI

        UI --> User :  asks to select data (type of sorting)
        deactivate UI

        User -> UI : select data (type of sorting)
        activate UI

        UI -> CTRL : sortAnnouncements(price, typeSorting, announcementList)
        activate CTRL

        CTRL -> AGENCYREP : sortAnnouncements(price, typeSorting, announcementList)
        activate AGENCYREP

        AGENCYREP -> AGENCY : sortAnnouncements(price, typeSorting, announcementList)
        activate AGENCY

        alt ascending price

            AGENCY -> AGENCY : sortAnnouncementsByAscendingPrice(announcementList)
            activate AGENCY

            AGENCY --> AGENCY : announcementList
            deactivate AGENCY

            else descending price

            AGENCY -> AGENCY : sortAnnouncementsByDescendingPrice(announcementList)
            activate AGENCY

            AGENCY --> AGENCY : announcementList
            deactivate AGENCY

            |||
        end

        AGENCY --> AGENCYREP : announcementList
        deactivate AGENCY

        AGENCYREP --> CTRL : announcementList
        deactivate AGENCYREP

        CTRL --> UI : announcementList
        deactivate CTRL
    |||
    end

    UI --> User : asks to select data (city)
    deactivate UI

    opt city
        User -> UI : selects data (city)
        activate UI

        UI --> User :  asks to select data (type of sorting)
        deactivate UI

        User -> UI : select data (type of sorting)
        activate UI

        UI -> CTRL : sortAnnouncements(city, typeSorting, announcementList)
        activate CTRL

        CTRL -> AGENCYREP : sortAnnouncements(city, typeSorting, announcementList)
        activate AGENCYREP

        AGENCYREP -> AGENCY : sortAnnouncements(city, typeSorting, announcementList)
        activate AGENCY

        alt ascending city

            AGENCY -> AGENCY : sortAnnouncementsByAscendingCity(announcementList)
            activate AGENCY

            AGENCY --> AGENCY : announcementList
            deactivate AGENCY

            else descending city

            AGENCY -> AGENCY : sortAnnouncementsByDescendingCity(announcementList)
            activate AGENCY

            AGENCY --> AGENCY : announcementList
            deactivate AGENCY

        |||
        end

       AGENCY --> AGENCYREP : announcementList
       deactivate AGENCY

       AGENCYREP --> CTRL : announcementList
       deactivate AGENCYREP

       CTRL --> UI : announcementList
       deactivate CTRL
    |||
    end

    UI --> User : asks to select data (state)
    deactivate UI

    opt state
        User -> UI : selects data (state)
        activate UI

        UI --> User :  asks to select data (type of sorting)
        deactivate UI

        User -> UI : select data (type of sorting)
        activate UI

        UI -> CTRL : sortAnnouncements(state, typeSorting, announcementList)
        activate CTRL

        CTRL -> AGENCYREP : sortAnnouncements(state, typeSorting, announcementList)
        activate AGENCYREP

        AGENCYREP -> AGENCY : sortAnnouncements(state, typeSorting, announcementList)
        activate AGENCY

        alt ascending state

            AGENCY -> AGENCY : sortAnnouncementsByAscendingState(announcementList)
            activate AGENCY

            AGENCY --> AGENCY : announcementList
            deactivate AGENCY

            else descending state

            AGENCY -> AGENCY : sortAnnouncementsByDescendingState(announcementList)
            activate AGENCY

            AGENCY --> AGENCY : announcementList
            deactivate AGENCY

        |||
        end

        AGENCY --> AGENCYREP : announcementList
        deactivate AGENCY

        AGENCYREP --> CTRL : announcementList
        deactivate AGENCYREP

        CTRL --> UI : announcementList
        deactivate CTRL
    |||
    end

    UI --> User : display all the listed properties, according to the \ncriteria chosen
    deactivate UI

deactivate User

@enduml
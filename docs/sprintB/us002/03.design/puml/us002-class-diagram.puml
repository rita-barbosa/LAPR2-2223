@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class AplicationSession
{
    + static getInstance()
    + getCurrentUserSession()
}
class Property
{
- Double distanceCityCentre
- Integer numberBathrooms
- Integer numberBedrooms
- Integer numberParkingSpaces
- Boolean existenceBasement
- Boolean inhabitableLoft
- String sunExposure
+ Property(propertyType,streetName, city, district, state,\nzipCode, distanceCityCentre, price, photograph,numberBedrooms,\nnumberParkingSpaces,existenceBasement,inhabitableLoft, numberBathrooms,\n availableEquipment, sunExposure)
}
class Location
{
- String streetName
- String city
- String district
- String state
- Integer zipCode
+ Location(streetName, city, district, state,zipCode)
}
class Photograph
{
- String uri
- addPhotographUri(uri)
}
class AvailableEquipment
{
- String description
- addAvailableEquipment(description)
}

class UserSession
{
    + getUserEmail()
}

class Agent {
    - String name
    - Integer passportCardNumber
    - Integer taxNumber
    - String emailAdress
    - Integer phoneNumber
}

class Announcement {
    - String acceptanceDate

    + Announcement(agent, commissionType, commissionValue, request)
    + createRequest(ownerEmail, propertyType, streetName, city, district, state, zipCode, area, distanceCityCentre,\n price, photograph,numberBedrooms,numberParkingSpaces, existenceBasement,inhabitableLoft,\nnumberBathrooms, availableEquipment, sunExposure)
    -getCurrentDate()
    -addRequest(request)
    -validateRequest(request)
}
class Commission {
- double commissionValue
+ Commission(commissionValue,commissionType)
}
class CommissionType
{
- String description
}
class Request
{
- String requestDate
+ Request(ownerEmail, propertyType,streetName, city, district, state,\nzipCode, distanceCityCentre, price, photograph,numberBedrooms,\nnumberParkingSpaces,existenceBasement,inhabitableLoft, numberBathrooms,\n availableEquipment, sunExposure)
- getCurrentDate()
}
class Agency {
    - integer id
    - String designation
    - String emailAddress
    - String phoneNumber

    - addAnnouncement(announcement)
    - validateAnnouncement(announcement)
    - getAgentByEmail(email)
    + anyAgentHasEmail(email)
    + publishAnnouncement(agent, typeCommission, commissionValue, request)
}

class CommissionTypeRepository {
    + getCommissionTypeList()
    + getCommissionTypeByDesignation(designation)
}
class PropertyTypeRepository {
    + getPropertyTypeList()
    + getPropertyTypeByDesignation(designation)
}

class AgencyRepository {
    + getAgencyByAgentEmail(email)
}

class Repositories {
    - Repositories()
    + getInstance() : Repositories
    + getCommissionTypeRepository()
    + getPropertyTypeRepository()
    + getAgencyRepository()
}

class PublishAnnouncementController {
    + PublishAnnouncementController(PropertyTypeRepository,CommissionTypeRepository,AgencyRepository)
    + publishAnnouncement(commissionValue, commissionTypeDescription, ownerEmail, propertyTypeDescription,\nstreetName, city, district, state, zipCode, area, distanceCityCentre,\nprice, photograph,numberBedrooms,numberParkingSpaces,\nexistenceBasement,inhabitableLoft, numberBathrooms, availableEquipment, sunExposure)
    + createCommission(commissionType,commissionValue)
    + getCommissionTypeList()
    + getPropertyTypeList()
    + addPhotographUri()
    + addAvailableEquipment()
    - getAgentFromSession()
    - getPropertyTypeByDesignation(designation)
    - getCommissionTypeByDesignation(designation)
}
class PropertyType
{
- String designation
+ PropertyType(designation)
}
class CommissionType
{
- String designation
+ CommissionType(designation)
}
class PublishAnnouncementUI {
}



PublishAnnouncementUI .> PublishAnnouncementController
PublishAnnouncementController .-> UserSession
PublishAnnouncementController .-> AplicationSession
AplicationSession -> AplicationSession : instance
AplicationSession --> "1" UserSession
PublishAnnouncementController .--> Repositories
PublishAnnouncementController .-> PropertyTypeRepository
PublishAnnouncementController .-> CommissionTypeRepository
PublishAnnouncementController .-> AgencyRepository

Repositories -> Repositories : instance
Repositories --> "1" CommissionTypeRepository
Repositories --> "1" PropertyTypeRepository
Repositories --> "1" AgencyRepository
AgencyRepository --> "*" Agency
Agency "1" ----> "*" Announcement

Announcement "*" --> "1" Agent : responsibleFor
CommissionTypeRepository "1" ---> "*" CommissionType
CommissionType "1" <-- Commission : isCategorized
Announcement "1" --> "1" Commission
Request "1" --> "1" Announcement : createdBy
Request "1" ---> "1" Property
Agency ----> Agent
PropertyTypeRepository "1" --> "*" PropertyType
PropertyType "1" <-- "*" Property
Property "1" --> "1" Location : hasAddress
Property "1" --> "1" Photograph : isVisualized
Property "1" --> "1" AvailableEquipment : includes


@enduml
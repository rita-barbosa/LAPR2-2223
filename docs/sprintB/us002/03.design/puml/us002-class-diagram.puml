@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class ApplicationSession
{
    + static getInstance()
    + getCurrentUserSession()
}
class Property
{
    - Double distanceCityCentre
    + Property(propertyType,streetName, city, district, state,\nzipCode, distanceCityCentre, price, photograph,numberBedroom,\nnumberParkingSpace,existenceBasement,inhabitableLoft, numberBathroom,\n availableEquipment, sunExposure)
}
class Location
{
    - String streetName
    - String city
    - String district
    - String state
    - Integer zipCode
    + Location(streetName, city, district, state,zipCode)
}
class Photograph
{
    - List<String> uri
    + Photograph(uriList)
}
class AvailableEquipment
{
    - List<String> description
    - addAvailableEquipment(availableEquipmentList)
}

class UserSession
{
    + getUserEmail()
}

class Agent {
    - String name
    - Integer passportCardNumber
    - Integer taxNumber
    - String emailAddress
    - Integer phoneNumber
}

class Announcement {
    - String acceptanceDate
    - getCurrentDate()
    + Announcement(agent, commissionType, commissionValue, request)
}
class Commission {
    - double commissionValue
    + Commission(commissionValue,commissionType)
}
class Request
{
    - String requestDate
    - String ownerEmail
    + Request(ownerEmail, propertyType,streetName, city, district, state,\nzipCode, distanceCityCentre, price, photograph,numberBedroom,\nnumberParkingSpace,existenceBasement,inhabitableLoft, numberBathroom,\n availableEquipment, sunExposure)

}
class Agency {
    - integer id
    - String designation
    - String emailAddress
    - String phoneNumber

    - addAnnouncement(announcement)
    - validateAnnouncement(announcement)
    - getAgentByEmail(email)
    - addRequest(request)
    - validateRequest(request)
    + anyAgentHasEmail(email)
    + publishAnnouncement(agent, commissionType, commissionValue, request)
    + createRequest(ownerEmail, propertyType, streetName, city, district, state, zipCode, area, distanceCityCentre,\n price, photograph,numberBedroom,numberParkingSpace, existenceBasement,inhabitableLoft,\nnumberBathroom, availableEquipment, sunExposure)
}

class CommissionTypeRepository {
    + getCommissionTypeList()
    + getCommissionTypeByDesignation(designation)
}
class PropertyTypeRepository {
    + getPropertyTypeList()
    + getPropertyTypeByDesignation(designation)
}

class AgencyRepository {
    + getAgencyByAgentEmail(email)
}

class Repositories {
    - Repositories()
    + getInstance() : Repositories
    + getCommissionTypeRepository()
    + getPropertyTypeRepository()
    + getAgencyRepository()
}

class PublishAnnouncementController {
    + PublishAnnouncementController(PropertyTypeRepository,CommissionTypeRepository,AgencyRepository)
    + publishAnnouncement(commissionValue, commissionTypeDescription, ownerEmail, propertyTypeDescription,\nstreetName, city, district, state, zipCode, area, distanceCityCentre,\nprice, photograph,numberBedroom,numberParkingSpace,\nexistenceBasement,inhabitableLoft, numberBathroom, availableEquipment, sunExposure)
    + createCommission(commissionType,commissionValue)
    + getCommissionTypeList()
    + getPropertyTypeList()
    - getAgentFromSession()
    - getPropertyTypeByDesignation(designation)
    - getCommissionTypeByDesignation(designation)
}
class PropertyType
{
    - String designation
    + PropertyType(designation)
}
class CommissionType
{
    - String designation
    + CommissionType(designation)
}
class PublishAnnouncementUI {
}
class Business
{
    - Double price
}
class Residence
{
    - Integer numberBathroom
    - Integer numberBedroom
    - Integer numberParkingSpace
}
class House
{
    - Boolean existenceBasement
    - Boolean inhabitableLoft
}
enum SunExposure
{
NORTH
SOUTH
WEST
EAST
}
    PublishAnnouncementUI .> PublishAnnouncementController
    PublishAnnouncementController .-> UserSession
    PublishAnnouncementController .-> ApplicationSession
    ApplicationSession -> ApplicationSession : instance
    ApplicationSession --> "1" UserSession
    PublishAnnouncementController .--> Repositories
    PublishAnnouncementController .-> PropertyTypeRepository
    PublishAnnouncementController .-> CommissionTypeRepository
    PublishAnnouncementController .-> AgencyRepository

    Repositories -> Repositories : instance
    Repositories --> "1" CommissionTypeRepository
    Repositories --> "1" PropertyTypeRepository
    Repositories --> "1" AgencyRepository
    AgencyRepository --> "*" Agency
    Agency "1" ----> "*" Announcement

    Announcement "*" --> "1" Agent : responsibleFor
    CommissionTypeRepository ---> "*" CommissionType
    CommissionType "1" <-- Commission : isCategorized
    Announcement  --> "1" Commission
    Request "1" <-- Announcement : isBasedOn
    Request  ---> "1" Property
    Agency ----> Agent
    PropertyTypeRepository "1" --> "*" PropertyType
    PropertyType "1" <-- "*" Property
    Property  --> "1" Location : hasAddress
    Property  --> "1" Photograph : isVisualized
    Property  --> "1" AvailableEquipment : includes
    Agency --> "*" Request : isAssignedTo
    Request -> "1" Business
    Residence --|> Property
    House --|> Residence
    House -> "1" SunExposure

@enduml
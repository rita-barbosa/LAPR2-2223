@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Owner" as Owner
participant ":CreatePropertyUI" as UI
participant ":CreatePropertyController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "transactionTypeRepository\n:TransactionTypeRepository" as TransactionTypeRepository
participant "propertyTypeRepository\n:PropertyTypeRepository" as PropertyTypeRepository
'participant ":ApplicationSession" as _APP
'participant "appSession\n:ApplicationSession" as APP
participant "agencyRepository\n:AgencyRepository" as AgencyRepository
participant "agency\n:Agency" as AGC
participant "location\n:Location" as LOCATION
participant "date\n:Date" as DATE
participant ":AuthFacade" as Auth
participant "userSession\n:UserSession" as SESSION
participant "property\n:Property" as PROPERTY

activate Owner

        Owner -> UI : asks to create a new Property

        activate UI

            UI -> CTRL** : create

            UI -> CTRL : getTransactionType()
            activate CTRL

                CTRL -> RepositorySingleton : getInstance()
                activate RepositorySingleton

                    RepositorySingleton --> CTRL: repositories
                deactivate RepositorySingleton

                CTRL -> PLAT : getTransactionTypeRepository()
                activate PLAT

                    PLAT --> CTRL: transactionTypeRepository
                deactivate PLAT

                CTRL -> TransactionTypeRepository : getTransactionType()
                activate TransactionTypeRepository

                    TransactionTypeRepository --> CTRL : transactionTypeList
                deactivate TransactionTypeRepository

                CTRL --> UI : transactionTypeList
            deactivate CTRL

            UI --> Owner : shows transaction types list and asks to select one
        deactivate UI

    Owner -> UI : selects a transaction type

    activate UI

    UI -> CTRL : getPropertyType()

    activate CTRL

    CTRL -> RepositorySingleton : getInstance()

    activate RepositorySingleton

    RepositorySingleton --> CTRL : repositories
    deactivate RepositorySingleton

     CTRL -> PLAT : getPropertyTypeRepository()
     activate PLAT

     PLAT --> CTRL : propertyTypeRepository
     deactivate PLAT

     CTRL --> PropertyTypeRepository : getPropertyType()

     activate PropertyTypeRepository

     PropertyTypeRepository --> CTRL : propertyTypeList
     deactivate PropertyTypeRepository

     CTRL --> UI : propertyTypeList
     deactivate CTRL

     UI --> Owner : shows property types list and asks to select one
     deactivate UI

     Owner -> UI : selects a property type

     activate UI

    UI --> Owner : requests data
    deactivate UI

    Owner -> UI : types requested data (price, contractDuration, area, availableEquipments,\n streetName, city, district, state, zipCode, distanceFromCityCenter, url)

    activate UI

        UI --> Owner : requests selected data
    deactivate UI

    Owner -> UI : selects requested data (property type, basement, bathrooms, bedrooms,\n inhabitable loft, sun exposure)
    activate UI

        UI -> CTRL : getAgencies()

    activate CTRL

        CTRL -> RepositorySingleton : getInstance()

        activate RepositorySingleton

            RepositorySingleton --> CTRL : repositories
        deactivate RepositorySingleton

        CTRL -> PLAT : getAgencyRepository()

        activate PLAT

            PLAT -> CTRL : agencysRepository

        deactivate PLAT

        CTRL -> AgencyRepository : getAgencies()

        activate AgencyRepository

        AgencyRepository --> CTRL : agencyList

        deactivate AgencyRepository

        CTRL --> UI : agencyList

    deactivate CTRL

        UI --> Owner : shows list of agencies and asks to select one

    deactivate UI

        Owner -> UI : selects an Agency

    activate UI

        UI -> CTRL : getAgents(ID)

        activate CTRL

                        CTRL -> RepositorySingleton : getInstance()
                        activate RepositorySingleton

                            RepositorySingleton --> CTRL: repositories
                        deactivate RepositorySingleton

                        CTRL -> PLAT : getAgencyRepository()
                        activate PLAT

                        PLAT --> CTRL : AgencyRepository

                        deactivate PLAT
                        CTRL -> AgencyRepository : getAgencyByID(ID)

                           activate AgencyRepository

                           loop for each Agency
                           AgencyRepository -> AGC : anyAgencyHasID(ID)

                           activate AGC

                           AGC --> AgencyRepository : true/false

                           deactivate AGC
                            end

                            AgencyRepository --> CTRL : agency

                           deactivate AgencyRepository

                           CTRL -> AGC : getAgents()

                           activate AGC

                           AGC --> CTRL : agentsList

                           deactivate AGC

                           CTRL --> UI : agentsList
        deactivate CTRL

        UI --> Owner : shows list of agents in previously chosen agency and asks to select one

    deactivate UI

    Owner -> UI : selects an agent

    activate UI

    UI --> Owner : shows all data and asks for confirmation

    deactivate UI

   Owner -> UI : submits data

   activate UI

    UI -> CTRL : createProperty(propertyType, transactionType, price, contractDuration,\n area, availableEquipments, streetName, city, district, state,\n zipCode, distanceFromCityCenter, url, agency, agent)

    activate CTRL

    CTRL -> LOCATION : location = createLocationInstance(streetName, city, district, state, zipCode)

    activate LOCATION

    LOCATION --> CTRL : location
    deactivate LOCATION

    CTRL -> DATE : propertyDateRecords = createDateInstance()

    activate DATE

    DATE -> DATE : getActualDate()

    DATE --> CTRL : propertyDateRecords
    deactivate DATE

    CTRL -> Auth : getCurrentUserSession()

    activate Auth

    Auth --> CTRL : userSession
    deactivate Auth

    CTRL -> SESSION : email = getUserID()

    activate SESSION

    SESSION --> CTRL : email
    deactivate SESSION

    CTRL -> AGC : createProperty(propertyType, transactionType, agency, agent, price, contractDuration, area, availableEquipments, distanceFromCityCenter, url, location, propertyDateRecords, email)

    activate AGC

    AGC -> PROPERTY** : create(propertyType, transactionType, agency, agent, price, contractDuration, area, url, \n availableEquipments, distanceFromCityCenter, location, propertyDateRecords, email)

        AGC -> AGC : addProperty(property)

        activate AGC

        AGC --> AGC : validateProperty(property)
        deactivate AGC

        AGC --> CTRL : property
    deactivate AGC

    CTRL --> UI : property

    UI --> Owner : displays operation success

deactivate Owner

@enduml
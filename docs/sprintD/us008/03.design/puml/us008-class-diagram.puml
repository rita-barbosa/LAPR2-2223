@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class ApplicationSession {
    + static getInstance()
    + getCurrentSession()
}

class UserSession {
    + getUserEmail()
}

'class Person {
'    - agentEmail
'}

class CommissionTypeRepository {
    - double commissionValue

    + getCommissionTypeList()
    + getCommissionTypeByDesignation(designation)
}

class AgencyRepository {
    + getAgencyByEmployeeEmail(agentEmail)
}

class Repositories {
    - Repositories()
    + getInstance() : repositories
    + getCommissionTypeRepository()
    + getAgencyRepository()
    + getAuthenticationRepository()
}

class AcceptRequestsController {
    + AcceptRequestsController(organizationRepository, taskCategoryRepository)
    + getTaskCategories()
    + getRequestByIdDto(requestIndex)
    + getCommissionTypeListDto()
    + getCommissionTypeList()
    + publishAnnouncement(commissionTypeDesignation, commissionValue, request, email)
    + defineJustificationMessage(message, request)
    + sendEmail(request)
    - getEmployeeFromSession()
    - getRequestsListByAgentEmail(agentEmail)
    - getAgentEmail()
    - toDto(requestList)
    - getRequestByID(requestId)
    - toDto(commissionTypeList)
    - getCommissionTypeByDescription(commissionTypeDesignation)
}

class AcceptRequestsUI {
}

class Email{
 +toString()
}

class Announcement{
    - LocalDate acceptanceDate
    - String commissionTypeDesignation
    - Double commissionValue
    + Announcement(agent, commissionType, commissionValue, request)
}

class Commission{
    - create(commissionValue,commissionType)
    + Commission(commissionValue, commissionType)
}

class CommissionTypeRepository {
    + getCommissionTypeList()
    + getCommissionTypeByDesignation(designation)
}

class Agency{
    - integer id
    - String designation
    - String emailAddress
    - String phoneNumber

    + getAgentByEmail(email, agency)
    + anyAgentHasEmail(agentEmail)
    + publishAnnouncement(agent, commissionType commissionValue, request)
}

class Request{
-Integer id
-LocalDate requestDate
-Employee agent
-Property property
-Business business
-Email ownerEmail

+hasAgentWithEmail(agentEmail)
+add()
+getOwnerEmail()
+sendEmail(ownerEmail, message)
+hasSameId(id)
+ sendNotification(ownerEmail, justificationMessage)
}

class RequestList{
-List<Request> requests

+sortRequestByMostRecentAdded(listRequests)
+hasSAmeId(id)
+getRequestById(requestId)
}

class RequestMapper{
+toDto(request)
+add(requestDto)
}

class RequestDto{
+List<RequestDto> requestListDto
-propertyAttributes
-businessAttributes
-id
-requestDate

+RequestDto(request)
+getPropertyAttributes()
+getBusinessAttributes()
+getRequestDate()
+getRequestIdFromDto()
+RequestDto(propertyAttributes, businessAttributes, requestDate, requestID)
}

interface Notification{
}

class EmailNotification implements Notification{
+sendNotification(ownerEmail, justificationMessage)
}

class CommissionTypeMapper{
+toDto(commissionTypeList)

}

class CommissionTypeDto{
+List<CommissionTypeDto> listCommissionTypeDto
-String commissionType
+CommissionTypeDto(commissionTypeList)
+getCommissionType()

}



Repositories -> Repositories : instance
ApplicationSession -> ApplicationSession : instance

AcceptRequestsUI .> AcceptRequestsController

AcceptRequestsController .> Repositories : repositories

Repositories --> "1" AgencyRepository
Repositories --> "1" CommissionTypeRepository

AgencyRepository --> "*" Agency

ApplicationSession --> "1" UserSession : userSession
UserSession --> Email

AcceptRequestsController ..> ApplicationSession
AcceptRequestsController ..> UserSession

AcceptRequestsController ..> RequestMapper
AcceptRequestsController ..> CommissionTypeMapper
AcceptRequestsController --> Announcement
AcceptRequestsController -> Request
Agency --> "1" RequestList
RequestList "1" --> "*" Request
Request .> Notification
CommissionTypeRepository -> Commission
Announcement --> Commission
CommissionTypeMapper ..> CommissionTypeDto
RequestMapper ..> RequestDto
CommissionType "1" <--- Commission : isCategorized






@enduml
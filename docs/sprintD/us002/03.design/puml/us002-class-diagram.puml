@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class ApplicationSession
{
    + static getInstance()
    + getCurrentUserSession()
}
class Property
{
    - Double distanceCityCentre
    - Double area
    + Property(propertyType, area, distanceCityCenter, photograph,\n streetName, city, district, state, zipCode)
    - addPhotograph(photograph)
    - validatePhotograph(photograph)
    - fillPhotographList(uriList)
}
class Location
{
    - String streetName
    - String city
    - String district
    - String state
    - Integer zipCode
    + Location(streetName, city, district, state,zipCode)
    -validateLocation(location)
}
class Photograph
{
    - URI uri
    + Photograph(uri)
}
class AvailableEquipment
{
    - List<String> description
    - AvailableEquipment(availableEquipmentDescription)
}

class UserSession
{
    + getUserEmail()
}

class Employee {
- String agency;
}

class Announcement {
   - LocalDate acceptanceDate
  - Integer id
    + Announcement(agent, commissionType, commissionValue, request)
    + sendSMS()
}
class SmsNotification{
    + sendNotification(phoneNumber,propertyLocation,acceptanceDate)
}
class Commission {
    - double commissionValue
    + Commission(commissionValue,commissionType)
}
class Request
{
    - LocalDate requestDate
    - String ownerEmail
    + Request(propertyType, amount,\n area, streetName, city, district,\nstate, zipCode, distanceCityCenter,uriList,agent)
    + Request(propertyType, amount,\n area, streetName, city, district,\nstate, zipCode, distanceCityCenter,uriList,agent,\nnumberBedrooms,numberBathrooms,\nnumberParkingSpace,availableEquipmentDescriptionList)
    + Request(propertyType, amount,\n area, streetName, city, district,\nstate, zipCode, distanceCityCenter,uriList,agent,\nnumberBedrooms,numberBathrooms,\nnumberParkingSpace,availableEquipment,\nexistenceBasement,inhabitableLoft,sunExposure)

}
class Agency {
    - integer id
    - String designation
    - String emailAddress
    - String phoneNumber

   - getAgentByEmail(email)
    - addRequest(request)
    - validateRequest(request)
    + anyAgentHasEmail(email)
    + publishAnnouncement(agent, commissionType, commissionValue, request)
    + createSaleRequest(announcementDto, propertyType,agent)
}
class AnnouncementList{
 + addAnnouncement(announcement)
 - validateAnnouncement(announcement)

}
class CommissionTypeRepository {
    + getCommissionTypeList()
    + getCommissionTypeByDesignation(designation)
}
class PropertyTypeRepository {
    + getPropertyTypeList()
    + getPropertyTypeByDesignation(designation)
}

class AgencyRepository {
    + getAgencyByEmail(email)
}

class Repositories {
    - Repositories()
    + getInstance() : Repositories
    + getCommissionTypeRepository()
    + getPropertyTypeRepository()
    + getAgencyRepository()
}

class PublishAnnouncementController {
    + PublishAnnouncementController(PropertyTypeRepository,CommissionTypeRepository,AgencyRepository)
    + publishAnnouncement(commissionValue, commissionTypeDescription, ownerEmail, propertyTypeDescription,\nstreetName, city, district, state, zipCode, area, distanceCityCentre,\nprice, photograph,numberBedroom,numberParkingSpace,\nexistenceBasement,inhabitableLoft, numberBathroom, availableEquipment, sunExposure)
    + getCommissionTypeList()
    + getPropertyTypeList()
    - getAgentByEmail()
    - getAgencyByEmail()
    - getEmailFromSession()
    - getPropertyTypeByDesignation(designation)
    - getCommissionTypeByDesignation(designation)
}
class PropertyType
{
    - String designation
    + PropertyType(designation)
}
class CommissionType
{
    - String designation
    + CommissionType(designation)
}
class PublishAnnouncementUI {
}
class Business
{
    - Double price
}
class BusinessType
{
- String designation
+ BusinessType(designation)
}
class Person{
- String name
- String passportCardNumber
- String phoneNumber
- List<String> roles
- String taxNumber
- String emailAddress
}
class Residence
{
    - Integer numberBathroom
    - Integer numberBedroom
    - Integer numberParkingSpace
    + Residence(propertyType, area, availableEquipment, streetName, \ncity, district, state,zipCode, parkingSpace, numberBedroom,\n numberBathroom, distanceCityCenter, photograph)
    - fillAvailableEquipmentList(availableEquipmentDescriptionList)
    - addAvailableEquipment(availableEquipment)
    - validateAvailableEquipment(availableEquipment)
}
class House
{
    - Boolean existenceBasement
    - Boolean inhabitableLoft
    + House(propertyType, availableEquipment, area, streetName, \ncity, district, state, zipCode, basement, inhabitableLoft,\n parkingSpace, sunExposure, numberBedroom,\n numberBathroom,distanceCityCenter, photograph)
}
enum SunExposure
{
NORTH
SOUTH
WEST
EAST
}

class AnnouncementDto {
- int commissionValue
- String commissionTypeDesignation
- int amount
- String propertyTypeDesignation
- int area
- String streetName
- String city
- String district
- String state
- String zipcode
- int distanceCityCenter
- int numberBedrooms
- int numberBathrooms
- int parkingSpace
- List<String>  availableEquipmentDescriptionList
- List<String>  uriList
- String existenceBasement
- String inhabitableLoft
- String sunExposure

+ getCommissionValue()
+ getCommissionTypeDesignation()
+ getAmount()
+ getPropertyTypeDesignation()
+ getArea()
+ getStreetName()
+ getCity()
+ getDistrict()
+ getState()
+ getZipcode()
+ getDistanceCityCentre()
+ getUriList()
+ getNumberBedrooms()
+ getNumberBathrooms()
+ getParkingSpace()
+ getAvailableEquipmentList()
+ getBasement()
+ getInhabitableLoft()
+ getSunExposure()
+ AnnouncementDto()
}
class AnnouncementMapper{
+ toModelRequest(announcementDto,propertyType)
- createPropertySaleRequest(propertyType, amount,\n area, streetName, city, district,\nstate, zipCode, distanceCityCenter,uriList,agent)
- createResidenceSaleRequest(propertyType, amount,\n area, streetName, city, district,\nstate, zipCode, distanceCityCenter,uriList,agent,\nnumberBedrooms,numberBathrooms,\nnumberParkingSpace,availableEquipmentDescriptionList)
- createHouseSaleRequest(propertyType, amount,\n area, streetName, city, district,\nstate, zipCode, distanceCityCenter,uriList,agent,\nnumberBedrooms,numberBathrooms,\nnumberParkingSpace,availableEquipment,\nexistenceBasement,inhabitableLoft,sunExposure)
}





    PublishAnnouncementUI .-> AnnouncementDto
    AnnouncementMapper .-> AnnouncementDto
    AnnouncementMapper .--> Announcement
     AnnouncementMapper .--> Request
    PublishAnnouncementController ..> AnnouncementDto
    PublishAnnouncementController ..> AnnouncementMapper
    PublishAnnouncementUI .> PublishAnnouncementController
    PublishAnnouncementController .-> UserSession
    PublishAnnouncementController .-> ApplicationSession
    ApplicationSession -> ApplicationSession : instance
    ApplicationSession --> "1" UserSession: userSession
    PublishAnnouncementController .--> Repositories : repositories
    PublishAnnouncementController .-> PropertyTypeRepository : PropertyTypeRepository
    PublishAnnouncementController .-> CommissionTypeRepository : CommissionTypeRepository
    PublishAnnouncementController .-> AgencyRepository : AgencyRepository
    PublishAnnouncementController .---> Agency : Agency
    Repositories -> Repositories : instance
    Repositories --> "1" CommissionTypeRepository
    Repositories --> "1" PropertyTypeRepository
    Repositories --> "1" AgencyRepository
    AgencyRepository --> "*" Agency
    Announcement "*" --> "1" Employee : responsibleFor
    CommissionTypeRepository ---> "*" CommissionType : commissionType
    CommissionType "1" <-- Commission : isCategorized
    Announcement  --> "1" Commission
    Request "1" <-- Announcement : isBasedOn
    Request  ---> "1" Property
    Agency ----> "*" Employee
    Agency ---> "1" AnnouncementList
    AnnouncementList "1" --> "*" Announcement
    PropertyTypeRepository  --> "*" PropertyType : propertyType
    PropertyType "1" <-- "*" Property
    Property  --> "1" Location : hasAddress
    Property  --> "1" Photograph : isVisualized
    Property  --> "1" AvailableEquipment : includes
    Agency --> "*" Request : isAssignedTo
    Request -> "1" Business
    Business "1" <-- "1" BusinessType : describes
    Residence --|> Property
    House --|> Residence
    House -> "1" SunExposure
    Person "1" <-- "1" Employee
    Announcement -.> SmsNotification
@enduml
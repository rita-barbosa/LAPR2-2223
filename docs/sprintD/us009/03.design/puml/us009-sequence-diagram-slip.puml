@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title Sequence Diagram (SD) - US009

autonumber

actor "<b> Customer </b>" as CTM
participant "<b> :ScheduleVisitUI </b>" as UI
participant "<b> :ScheduleVisitController </b>" as CTRL
participant "<b> announcementList</b>\n<b> :AnnouncementList </b>" as LISTCLASS

activate CTM

    CTM -> UI : asks to schedule a new visit
        activate UI

    UI -> CTRL** : create

    UI -> CTRL : getAnnouncementListDto()
        activate CTRL

    CTRL -> CTRL : getAllAnnouncementsList()
    activate CTRL
            ref over CTRL
                Get Announcements List
            end ref
        CTRL --> CTRL : listToDisplay
    deactivate CTRL
|||
    CTRL -> CTRL : toDto(listToDisplay)
    activate CTRL
            ref over CTRL
                Convert List to DTO
            end ref
        CTRL --> CTRL : listToDisplayDto
    deactivate CTRL

        CTRL --> UI : listToDisplayDto
    deactivate CTRL

        UI --> CTM : shows announcements list
    deactivate UI

    loop While the user intends

    CTM -> UI : asks to select filter for list
    activate UI

    UI -> CTRL : getCriteriaList()
    activate CTRL
        ref over CTRL
            Get Criteria List
        end ref
    CTRL --> UI : criteriaList
    deactivate CTRL

    UI --> CTM : shows criteria list and asks to select a criteria type

    deactivate UI

            CTM -> UI : selects criteria
            activate UI

            UI -> CTRL : getAllAnnouncementsList()
            activate CTRL
              ref over CTRL
                Get Announcements List
              end ref

            CTRL --> UI : listToDisplay
            deactivate CTRL

            alt criteria == 1

                UI -> CTRL : getBusinessTypeList()
                activate CTRL
                ref over CTRL
                Get Business Type List
                end ref
                CTRL --> UI : businessTypeList
                deactivate CTRL

                UI --> CTM : shows business type list and asks to select one
                deactivate UI

                CTM -> UI : selects a businessType
                activate UI

                UI -> CTRL : getAnnouncementsByBusinessType(businessType, listToDisplay)
                deactivate UI
                activate CTRL

                CTRL -> LISTCLASS : announcementHasBusinessType(listToDisplay, businessType)
                activate LISTCLASS

                LISTCLASS --> CTRL : sortedList
|||
                deactivate LISTCLASS
                deactivate CTRL

            else criteria == 2

                UI -> CTRL : getPropertyTypeList()
                activate UI
                activate CTRL
                ref over CTRL
                Get Property Type List
                end ref
                CTRL --> UI : propertyTypeList
                deactivate CTRL

                UI --> CTM : shows property type list and asks to select one
                deactivate UI

                CTM -> UI : selects a propertyType
                activate UI

                UI -> CTRL : getAnnouncementsByPropertyType(propertyType, listToDisplay)
                deactivate UI
                activate CTRL

                CTRL -> LISTCLASS : announcementHasPropertyType(listToDisplay, propertyType)
                activate LISTCLASS

                    LISTCLASS --> CTRL : sortedList
|||
                deactivate LISTCLASS
                deactivate CTRL

            else criteria == 3 && propertyType != "Land"

                CTM -> UI : types number of bedrooms
                activate UI

                UI -> CTRL : getAnnouncementsByNumberBedrooms(numberBedrooms, listToDisplay)
                deactivate UI
                activate CTRL

                CTRL -> LISTCLASS : announcementHasNumberBedrooms(listToDisplay, numberBedrooms)
                activate LISTCLASS

                    LISTCLASS --> CTRL : sortedList
|||
                deactivate LISTCLASS
                deactivate CTRL

            else criteria == 4

                UI --> CTM : shows price sorting orders available and asks to select one

                CTM -> UI : selects a sortingOrder
                activate UI

                UI -> CTRL : getAnnouncementsByPrice(sortingOrder, listToDisplay)
                deactivate UI
                activate CTRL

                alt sortingOrder == "Ascending"
                CTRL -> LISTCLASS : sortAnnouncementsByAscendingPrice(listToDisplay)
                |||
                activate LISTCLASS
                else
                CTRL -> LISTCLASS : sortAnnouncementsByDescendingPrice(listToDisplay)
                |||
                end alt
                
                LISTCLASS --> CTRL : sortedList
|||
                deactivate LISTCLASS
                deactivate CTRL

            else criteria == 5
            
                UI --> CTM : shows city sorting orders available and asks to select one

                CTM -> UI : selects a sortingOrder
                activate UI

                UI -> CTRL : getAnnouncementsByCity(sortingOrder, listToDisplay)
                deactivate UI
                activate CTRL

                alt sortingOrder == "Ascending"
                CTRL -> LISTCLASS : sortAnnouncementsByAscendingCity(listToDisplay)
                |||
                activate LISTCLASS
                else
                CTRL -> LISTCLASS : sortAnnouncementsByDescendingCity(listToDisplay)
                |||
                end alt
                
                LISTCLASS --> CTRL : sortedList
|||
                deactivate LISTCLASS
                deactivate CTRL

            else criteria == 6

                UI --> CTM : shows state sorting orders available and asks to select one

                CTM -> UI : selects a sortingOrder
                activate UI

                UI -> CTRL : getAnnouncementsByState(sortingOrder, listToDisplay)
                deactivate UI
                activate CTRL

                alt sortingOrder == "Ascending"
                CTRL -> LISTCLASS : sortAnnouncementsByAscendingState(listToDisplay)
                |||
                activate LISTCLASS
                else
                CTRL -> LISTCLASS : sortAnnouncementsByDescendingState(listToDisplay)
                |||
                end alt

                LISTCLASS --> CTRL : sortedList
|||
                deactivate LISTCLASS

            end alt

                    CTRL -> CTRL : toDto(sortedList)
                    activate CTRL
                            ref over CTRL
                                Convert List to DTO
                            end ref
                        CTRL --> CTRL : sortedListDto
                    deactivate CTRL

                        CTRL --> UI : sortedListDto
                    deactivate CTRL
                    activate UI

                        UI --> CTM : shows announcements list
                    deactivate UI

            deactivate CTRL

            deactivate UI

        end loop

    CTM -> UI : selects an announcement
        activate UI

    UI -> CTRL : toModel(announcementDto)
    activate CTRL
    CTRL -> CTRL : toModel(announcementDto)
    activate CTRL
        ref over CTRL
            Convert Announcement DTO
             to Model
        end ref

    CTRL --> CTRL : announcement
    deactivate CTRL

        CTRL --> UI : announcement
    deactivate CTRL

    UI --> CTM : requests data
        deactivate UI

    loop While the user intends
    CTM -> UI : types requested data (visitDay, visitMonth, visitYear,\n startHour, endHour)
        activate UI

    UI --> CTM : shows all data and asks to submit
    deactivate UI

    CTM -> UI : submits data
    activate UI

        UI -> CTRL : scheduleVisit(announcement, visitDay,\n visitMonth, visitYear, startHour, endHour)

        activate CTRL

        CTRL -> CTRL : scheduleVisit(announcement, visitDay,\n visitMonth, visitYear, startHour, endHour)
        activate CTRL

        ref over CTRL
            Schedule Visit
        end ref

            CTRL --> CTRL : confirmation
        deactivate CTRL
    |||
    end loop

    CTRL --> UI : confirmation
    deactivate CTRL

    UI --> CTM : displays operation success
        deactivate UI

@enduml
@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction


title Class Diagram - US018


class Agency {
    + getAnnouncementListDealData(regressionModelType,variable)
}

class AnnouncementList {
    - List<Announcement>
    + getDealsData(regressionModelType,variable)
}

class Announcement {
 - isDeal()
 - getSaleAmount()
 + validForAnalysis()
 + getDataForRegression(regressionModelType, variable)

}

class Request {
 + getVariablesValue()
 + getVariableValueByDesignation(variable)
 + isSaleResidence()
}

class Residence {
 + getNumberBedrooms()
 + getNumberBathrooms()
 + getParkingSpace()
 + getVariable(variable)
 **+ getArea()**
 **+ getDistanceCityCenter()**
}


class AgencyRepository {
    - List<Agency> agencies
    + getAgenciesDataList(regressionModelType,variable)
}
class RegressionModelTypeRepository {
-List<RegressionModelType> regressionModelTypes
    + getRegressionModelTypeList()
}

class RegressionModelType {
- String designation
+ RegressionModelType(designation)
 + getRegressionModelTypeDesignation()
}

class RegressionModelTypeMapper {
 + toDto(regressionModelTypeList)
 - toDto(regressionModelType)
 + toModel(regressionModelTypeDto)
}

class RegressionModelTypeDto {
- String designation
+ getRegressionModelTypeDesignation()
}

class Statistic {
**After studying package check design**
 + getStatistics(regressionModelType,dealsDataList)
}

class Business
{
    - Double price
}
class BusinessType
{
- String designation
+ BusinessType(designation)
}

class Repositories {
    - Repositories()
    + getInstance() : repositories
    + getAgencyRepository()
    + getRegressionModelTypeRepository()
}

class AnalyzeDealsController {
    + AnalyzeDealsController(organizationRepository, taskCategoryRepository)
    + getRegressionModelTypeList()
    + getRegressionModelStatisticsAndForecastValues(regressionModelTypeDto, variable)
    - getDataForAnalysis(regressionModelType, variable)
    - getRegressionModelStatistics(regressionModelType, dealsDataList)
}


class AnalyzeDealsUI{
}

class SimpleLinear implements RegressionModel {
**After studying package check design**
}
class Multilinear implements RegressionModel {
**After studying package check design**
}
interface RegressionModel {
 + RegressionModel(dealsDataList)
 + calculateSlope()
 + calculateIntercept()
 + determineConfidenceIntervals()
 + determineHypothesisTests()
 + getForecastValuesForData()
}



Repositories -> Repositories : instance

AnalyzeDealsUI .> AnalyzeDealsController
AnalyzeDealsUI .--> RegressionModelTypeDto

RegressionModelTypeMapper .> RegressionModelTypeDto
RegressionModelTypeMapper .-> RegressionModelType

AnalyzeDealsController .> Repositories : repositories

Repositories --> "1" AgencyRepository

AnalyzeDealsController ..> AgencyRepository : AgencyRepository
AnalyzeDealsController ..> RegressionModelTypeRepository : RegressionModelTypeRepository
AnalyzeDealsController ..> Statistic
Statistic .--> SimpleLinear
Statistic .---> Multilinear

RegressionModelTypeRepository --> "*" RegressionModelType

AgencyRepository --> "*" Agency

AnnouncementList "1" --> "*" Announcement
Announcement --> "1" Request
Request  ---> "1" Property
    Request -> "1" Business
    Business "1" <-- "1" BusinessType
Residence --|> Property
Agency "1" --> "*" Announcement
Agency  --> "1" AnnouncementList

@enduml
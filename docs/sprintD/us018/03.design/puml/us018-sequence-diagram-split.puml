@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Store Manager" as ADM
participant ":AnalyzeDealsUI" as UI
participant ":AnalyzeDealsController" as CTRL
participant "repositories\n:Repositories" as PLAT
participant "agencyRepository\n:AgencyRepository" as AgencyRepository
participant "statistic\n:Statistic" as ST
participant "<interface>\n:RegressionModel" as RM
participant "statisticMapper\n:StatisticMapper" as STMapper
participant "regressionModelTypeMapper\n:RegressionModelTypeMapper" as RMTMapper
participant "regressionModelTypeDto\n:RegressionModelTypeDto" as RMTDto
participant "regressionModelType\n:RegressionModelType" as RMT



activate ADM

    ADM -> UI : asks to analyze property deals.
    activate UI

    UI -> CTRL**: create()

    UI -> CTRL : getRegressionModelTypeList()
    activate CTRL

    ref over CTRL
    Get Regression Model Type List
    end ref



    CTRL --> UI: regressionModelTypeDtoList
    deactivate CTRL


    UI --> ADM : shows regression models available \nand asks to select one.
    deactivate UI

    ADM -> UI : selects regression model.
    activate UI

    alt regressionModelTypeDto == simple linear
        UI --> ADM: shows the variables available for regression \nmodels and asks to select one.
         deactivate UI
        ADM -> UI: selects variable.
        activate UI
        |||
    end alt

    UI -> CTRL : getRegressionModelStatisticsAndForecastValues(regressionModelTypeDto, variable)
    activate CTRL

    CTRL -> RMTMapper : toModel(regressionModelTypeDto)
    activate RMTMapper

    RMTMapper -> RMTDto : getRegressionModelTypeDesignation()
    activate RMTDto

    RMTDto --> RMTMapper : regressionModelTypeDesignation
    deactivate RMTDto

    RMTMapper -> RMT** : create(regressionModelTypeDesignation)

    RMTMapper --> CTRL : regressionModelType
    deactivate RMTMapper


    |||
    CTRL -> CTRL : getDataForAnalysis(regressionModelType,variable)
    activate CTRL

    CTRL -> PLAT : getAgencyRepository()
    activate PLAT

    PLAT --> CTRL : agencyRepository
    deactivate PLAT


    CTRL -> AgencyRepository : getAgenciesDataList(regressionModelType,variable)
    activate AgencyRepository
        ref over AgencyRepository
         Get all data for analysis
        end ref

    AgencyRepository --> CTRL  : dealsDataList
    deactivate AgencyRepository



    CTRL --> CTRL: dealsDataList
    deactivate CTRL

    |||
    CTRL -> CTRL: getRegressionModelStatistics(regressionModelType, dealsDataList)
    activate CTRL

    CTRL -> ST** : create(regressionModelType, dealsDataList)
    activate ST
    ST -> RM**: create(dealsDataList)

          note right RM
          RegressionModel implementation will
          depend on the regression model specified
          in regressionModelType instance.
          end note


      ST -> RM : getRegressionReport()
      activate RM

      RM --> ST : report
      deactivate RM

      ST -> RM: getForecastValues()
      activate RM

      RM--> ST: forecastValues
      deactivate RM

      ST --> CTRL :
      deactivate ST

    CTRL -> STMapper : toDto(statistic)
    activate STMapper

        ref over STMapper
           Convert Statistic To Dto
        end ref

    STMapper --> CTRL : statisticDto
    deactivate STMapper


    CTRL --> CTRL: statisticDto
    deactivate CTRL

    CTRL --> UI : statisticDto
    deactivate CTRL

    UI --> ADM : shows the estimated price for each house\nand apartment deal, and the selected \nregression model report.
    deactivate UI


deactivate ADM

@enduml